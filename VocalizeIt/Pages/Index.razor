@page "/"
@using System.Text.Json

<section class="header5 cid-uqc6hTa3sj mbr-fullscreen" id="header5-3">
    <div class="container">
        <div class="row justify-content-center">
            <div class="mbr-white col-md-10">
                <h1 class="mbr-section-title align-center pb-3 mbr-fonts-style display-1">
                    VocalizeIt
                </h1>
                <div class="mbr-section-btn align-center">
                    <h3 class="main-font-family">Convert PDF to Audio</h3>

                    <div class="mb-3">
                        <InputFile OnChange="HandleFileSelected" class="form-control file-input file-input-background" />
                    </div>

                    <button @onclick="UploadFile" class="btn btn-primary main-font-family">Convert</button>

                    @if (IsProcessing)
                    {
                        <p>Processing file...</p>
                    }

                    @if (!string.IsNullOrEmpty(ServerResponseMessage))
                    {
                        <div class="mt-3">
                            <h4>Server Response: @ServerResponseMessage</h4>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private IBrowserFile? selectedFile;
    private string? ServerResponseMessage;
    private bool IsProcessing = false;

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task UploadFile()
    {
        if (selectedFile != null)
        {
            IsProcessing = true;

            try
            {
                // Create the content for the POST request
                using var content = new MultipartFormDataContent();
                var fileStreamContent = new StreamContent(selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 10)); // 10MB max
                content.Add(fileStreamContent, "file", selectedFile.Name);

                var client = new HttpClient();
                var response = await client.PostAsync("http://127.0.0.1:8001/upload/", content);

                if (response.IsSuccessStatusCode)
                {
                    var jsonResponse = await response.Content.ReadAsStringAsync();
                    var result = JsonDocument.Parse(jsonResponse);
                    var message = result.RootElement.GetProperty("message").GetString();

                    // Display the server response
                    ServerResponseMessage = message;
                }
                else
                {
                    ServerResponseMessage = "Error: Unable to process the file.";
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
                ServerResponseMessage = "Error: Something went wrong.";
            }

            IsProcessing = false;
        }
    }
}
